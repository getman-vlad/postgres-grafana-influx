version: '3.6'

services:
  postgres:
    image: postgres:latest
    container_name: ${POSTGRES_CONTAINER}
    restart: always
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./postgres:/var/lib/postgresql/data
    networks:
      - postgres

  telegraf:
    image: telegraf:latest
    container_name: ${TELEGRAF_CONTAINER}
    volumes:
    - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - influx
    links:
      - influx
    ports:
    - '127.0.0.1:8125:8125/udp'

  influx:
    image: influxdb:latest
    container_name: ${INFLUX_CONTAINER}
    restart: always
    ports:
      - "${INFLUX_PORT}:8086"
    volumes:
      - ./influx:/var/lib/influxdb
    environment:
      - INFLUXDB_HOST=${INFLUX_HOST}
      - INFLUXDB_DB=${INFLUX_DBNAME}
      - INFLUXDB_ADMIN_USER=${INFLUX_USER}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUX_PASSWORD}
    networks:
      - influx
  grafana:
    image: grafana/grafana:latest
    container_name: ${GRAFANA_CONTAINER}
    restart: always
    ports:
      - "${GRAFANA_PORT}:3000"
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_SERVER_ROOT_URL: http://${GRAFANA_HOST}:${GRAFANA_PORT}/grafana/
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
      GF_USERS_DEFAULT_THEME: "dark"
      GF_INSTALL_PLUGINS: grafana-worldmap-panel, citilogics-geoloop-panel
    volumes:
      - ./grafana:/var/lib/grafana:rw
    depends_on:
      - influx
      - postgres
    networks:
      - influx
      - postgres

  prometheus:
    image: prom/prometheus:latest
    container_name: ${PROMETHEUS_CONTAINER}
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/config:/config
      - ./prometheus/data:/prometheus
    restart: unless-stopped
    command:
      - "--config.file=/config/prometheus.yml"

networks:
  influx:
    driver: bridge
  postgres:
    driver: bridge
